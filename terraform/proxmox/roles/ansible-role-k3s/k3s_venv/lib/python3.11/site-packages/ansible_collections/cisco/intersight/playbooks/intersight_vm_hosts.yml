---
#
# Get VM hosts and write information to a .csv file
#
- hosts: localhost
  connection: local
  collections:
    - cisco.intersight
  gather_facts: false
  vars:
    # Create an anchor for api_info that can be used throughout the file
    api_info: &api_info
      # if api_key vars are omitted, INTERSIGHT_API_KEY_ID, INTERSIGHT_API_PRIVATE_KEY,
      # and INTERSIGHT_API_URI environment variables used for API key data
      api_private_key: "{{ api_private_key | default(omit) }}"
      api_key_id: "{{ api_key_id | default(omit) }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
    filename: vm_hosts.csv
  tasks:
    # Get the VM hosts
    - name: "Get VM Hosts"
      intersight_rest_api:
        <<: *api_info
        resource_path: /virtualization/VirtualMachines
        query_params:
          $select: Name,Inventory
          $expand: Inventory($expand=Host($select=HypervisorType,Model,Name,Serial))
          $top: 1000
        return_list: true
      register: vm_resp
    # Create file and write results
    - name: "Create {{ filename }} and write results"
      file:
        path: "{{ filename }}"
        state: absent
    - lineinfile:
        path: "{{ filename }}"
        line: VM,Hypervisor,Model,Hostname,Serial
        create: true
    # Only write VMs that have Host information to the .csv file
    - lineinfile:
        path: "{{ filename }}"
        line: "{{ item.Name }},{{ item.Inventory.Host.HypervisorType }},{{ item.Inventory.Host.Model }},{{ item.Inventory.Host.Name }},{{ item.Inventory.Host.Serial  }}"
      loop: "{{ vm_resp.api_response }}"
      loop_control:
        label: "{{ item.Name }}"
      when: item.Inventory.Host is defined
