---
#
# Get VLANs for each Ethernet Network Policy
#
- hosts: localhost
  connection: local
  collections:
    - cisco.intersight
  gather_facts: false
  vars:
    # Create an anchor for api_info that can be used throughout the file
    api_info: &api_info
      # if api_key vars are omitted, INTERSIGHT_API_KEY_ID, INTERSIGHT_API_PRIVATE_KEY,
      # and INTERSIGHT_API_URI environment variables used for API key data
      api_private_key: "{{ api_private_key | default(omit) }}"
      api_key_id: "{{ api_key_id | default(omit) }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
    filename: vlans.csv
  tasks:
    # Get Ethernet Network Policies
    - name: "Get Ethernet Network Policies"
      intersight_rest_api:
        <<: *api_info
        resource_path: /fabric/EthNetworkPolicies
        query_params:
          $top: 1000
        return_list: true
      register: eth_net_resp
    # Get the VLANs used by each Eth Policy
    - name: "Get VLANs in each EthNetworkPolicy"
      intersight_rest_api:
        <<: *api_info
        resource_path: /fabric/Vlans
        query_params:
          $filter: "EthNetworkPolicy.Moid eq '{{ item.Moid }}'"
          $expand: EthNetworkPolicy
        return_list: true
      loop: "{{ eth_net_resp.api_response }}"
      loop_control:
        label: "{{ item.Name }}"
      register: vlan_resp
    # Create file and write results
    - name: "Create {{ filename }} and write results"
      file:
        path: "{{ filename }}"
        state: absent
    - lineinfile:
        path: "{{ filename }}"
        line: EthNetworkPolicy,IsNative,VlanName,VlanId
        create: true
    - include_tasks: vlans_to_file.yml
      loop: "{{ vlan_resp.results }}"
      loop_control:
        loop_var: outer_item
        label: VLANs
