---
- name: Configure NTP on proxmox
  hosts: proxmox_servers
  become: true
  tasks:
    - name: Install keepalived
      ansible.builtin.apt:
        update_cache: true
        name:
          - keepalived
      register: keepalived_new

    - name: Stop keepalived
      ansible.builtin.systemd_service:
        name: keepalived
        enabled: true
        state: stopped
      when: keepalived_new.changed

    - name: Copy keepalived configuration
      ansible.builtin.template:
        src: proxmox-keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
        owner: root
        group: root
        mode: "0644"
      register: keepalived_config

    - name: Restart keepalived
      ansible.builtin.systemd_service:
        name: keepalived
        enabled: true
        state: restarted
      when: keepalived_config.changed

    - name: Ensure keepalived is started
      ansible.builtin.systemd_service:
        name: keepalived
        enabled: true
        state: started

    - name: Install CloudFlare certbot plugin
      ansible.builtin.apt:
        name: python3-certbot-dns-cloudflare
        update_cache: true
        state: present

    - name: Create cloudflare credentials file
      ansible.builtin.template:
        src: cloudflare.ini.j2
        dest: /etc/ssl/cloudflare.ini
        mode: "0600"
        owner: root
        group: root

    - name: Get LetsEncrypt TLS certificates
      ansible.builtin.import_role:
        name: geerlingguy.certbot
      vars:
        certbot_install_method: package
        certbot_create_if_missing: true
        certbot_create_method: standalone
        certbot_admin_email: pepitsizous@zoho.com
        certbot_certs:
          - domains:
              - pve.home.inherently.xyz
        certbot_create_command: "{{ certbot_script }} certonly --preferred-challenges dns --dns-cloudflare --dns-cloudflare-credentials /etc/ssl/cloudflare.ini --noninteractive
          --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
        certbot_create_standalone_stop_services: []
        certbot_auto_renew_user: root

    - name: Delete LE README before creating combined SSL file
      ansible.builtin.file:
        path: /etc/letsencrypt/live/pve.home.inherently.xyz/README
        state: absent

    - name: Create combined SSL file
      ansible.builtin.assemble:
        src: /etc/letsencrypt/live/pve.home.inherently.xyz
        dest: /etc/letsencrypt/live/combined.pem

    - name: Install haproxy
      ansible.builtin.apt:
        update_cache: true
        name:
          - haproxy
      register: haproxy_new

    - name: Stop haproxy
      ansible.builtin.systemd_service:
        name: haproxy
        enabled: true
        state: stopped
      when: haproxy_new.changed

    - name: Ensure haproxy certs dir exists
      ansible.builtin.file:
        path: /etc/haproxy/certs
        owner: root
        group: root
        mode: "0755"
        state: directory

    - name: Copy certificate into haproxy certs directory
      ansible.builtin.copy:
        remote_src: true
        src: /etc/letsencrypt/live/combined.pem
        dest: /etc/haproxy/certs/cert.pem
        mode: "0600"
        owner: root
        group: root

    - name: Copy haproxy configuration
      ansible.builtin.template:
        src: proxmox-haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: "0644"
      register: haproxy_config

    - name: Restart haproxy
      ansible.builtin.systemd_service:
        name: haproxy
        enabled: true
        state: restarted
      when: haproxy_config.changed

    - name: Ensure haproxy is started
      ansible.builtin.systemd_service:
        name: haproxy
        enabled: true
        state: started

- name: Configure NTP on proxmox
  hosts: proxmox_servers
  become: true
  roles:
    - role: geerlingguy.ntp

- name: Set up proxmox cluster
  hosts: proxmox_servers
  become: true
  roles:
    - role: lae.proxmox

- name: Proxmox post-config
  hosts: proxmox_servers
  become: true
  tasks:
    - name: Install useful packages
      ansible.builtin.apt:
        update_cache: true
        name:
          - vim
          - tmux
          - htop
          - python3
          - python3-apt
          - python3-guestfs
          - python3-proxmoxer
          - python-is-python3
          - nfs-common
          - nfs4-acl-tools
          - libguestfs-tools
        state: present

    # NOTE: Use https://docs.ansible.com/ansible/latest/collections/ansible/builtin/stat_module.html to avoid the following long task running
    # Will need to move from /tmp to a permanent path

    - name: Download Debian 12 genericcloud qcow2 image
      ansible.builtin.get_url:
        url: https://cloud.debian.org/images/cloud/bookworm/20240717-1811/debian-12-genericcloud-amd64-20240717-1811.qcow2
        dest: /tmp/debian-12-amd64.qcow2
        checksum: sha512:0f0075d53749dba4c9825e606899360626bb20ac6bab3dbdeff40041b051d203eb1a56e68d377c9fac0187faa0aea77fd543ef4a883fff2304eac252cce01b44
        mode: "0644"
        owner: root
        group: root

    - name: Add cron to Debian 12 image
      vkhitrin.libguestfs.guestfs_package:
        image: /tmp/debian-12-amd64.qcow2
        name: cron
        state: present

    - name: Add qemu-guest-agent to Debian 12 image
      vkhitrin.libguestfs.guestfs_package:
        image: /tmp/debian-12-amd64.qcow2
        name: qemu-guest-agent
        state: present

    - name: Remove unattended-upgrades from Debian 12
      vkhitrin.libguestfs.guestfs_package:
        image: /tmp/debian-12-amd64.qcow2
        name: unattended-upgrades
        state: absent

    - name: Copy /etc/network/interfaces config
      ansible.builtin.copy:
        src: debinterfaces
        dest: /tmp/debinterfaces
        owner: root
        group: root
        mode: "0644"

    - name: Change network interfaces config for Debian 12
      vkhitrin.libguestfs.guestfs_copy_in:
        image: /tmp/debian-12-amd64.qcow2
        src: /tmp/debinterfaces
        dest: /etc/network/interfaces

    - name: Create Debian 12 virtual machine
      community.general.proxmox_kvm:
        validate_certs: false # TODO: disable after figuring out LE certs
        api_user: root@pam
        api_password: failfail
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        vmid: "{{ template_vmid2 }}"
        name: deb12-tmpl
        description: debian 12 template
        acpi: true
        cpu: cputype=SandyBridge
        cores: 1
        sockets: 1
        memory: 1024
        numa_enabled: true
        ostype: l26
        boot: c
        bootdisk: virtio0
        scsihw: virtio-scsi-pci
        ide:
          ide2: local-lvm:cloudinit,format=raw
        net:
          net0: virtio,bridge=vmbr0
        serial:
          serial0: socket
        vga: qxl
        agent: enabled=1,fstrim_cloned_disks=1
        hotplug: disk,network,usb,memory,cpu
        tags: [debian, bookworm, debian12, template]
        state: present

    - name: Add root disk imported from qcow2 image to Debian 12 virtual machine
      community.general.proxmox_disk:
        validate_certs: false # TODO: disable after figuring out LE certs
        api_user: root@pam
        api_password: failfail
        api_host: "{{ ansible_host }}"
        vmid: "{{ template_vmid2 }}"
        name: deb12-tmpl
        disk: virtio0
        storage: local-lvm
        import_from: /tmp/debian-12-amd64.qcow2
        state: present

    - name: Convert Debian 12 virtual machine to template
      community.general.proxmox_kvm:
        validate_certs: false # TODO: disable after figuring out LE certs
        api_user: root@pam
        api_password: failfail
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        vmid: "{{ template_vmid2 }}"
        name: deb12-tmpl
        state: template
