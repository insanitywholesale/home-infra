---
- name: Deploy InfluxDB
  hosts: influxdb
  become: true

  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        update_cache: true
        state: present
      loop:
        - apt-transport-https
        - software-properties-common

    - name: Add InfluxDB debian repo signed by gpg key
      ansible.builtin.deb822_repository:
        name: influxdata
        types: [deb]
        signed_by: https://repos.influxdata.com/influxdata-archive_compat.key
        uris: https://repos.influxdata.com/debian
        suites: stable
        components: [main]
        enabled: true
        state: present

    - name: Install InfluxDB
      ansible.builtin.apt:
        name: influxdb2
        update_cache: true
        state: present

    - name: Start and enable InfluxDB service
      ansible.builtin.systemd:
        name: influxdb
        enabled: true
        state: started

    - name: Ensure InfluxDB is started
      ansible.builtin.wait_for:
        port: 8086
        delay: 5
        timeout: 60

    # - name: Create InfluxDB admin user and database
    #   influxdb_database:
    #     host: localhost
    #     username: root
    #     password: your_influxdb_password
    #     database_name: your_database_name
    #     state: present

    # - name: Create a regular user for InfluxDB
    #   influxdb_user:
    #     host: localhost
    #     username: root
    #     password: your_influxdb_password
    #     database_name: your_database_name
    #     user_name: your_user_name
    #     user_password: your_user_password
    #     state: present

    - name: Install CloudFlare certbot plugin
      ansible.builtin.apt:
        name: python3-certbot-dns-cloudflare
        update_cache: true
        state: present

    - name: Create cloudflare credentials file
      ansible.builtin.template:
        src: cloudflare.ini.j2
        dest: /etc/ssl/cloudflare.ini
        mode: "0600"
        owner: root
        group: root

    - name: Get LetsEncrypt TLS certificates
      ansible.builtin.import_role:
        name: geerlingguy.certbot
      vars:
        certbot_install_method: package
        certbot_create_if_missing: true
        certbot_create_method: standalone
        certbot_admin_email: pepitsizous@zoho.com
        certbot_certs:
          - domains:
              - influxdb.home.inherently.xyz
        certbot_create_command: "{{ certbot_script }} certonly --preferred-challenges dns --dns-cloudflare --dns-cloudflare-credentials /etc/ssl/cloudflare.ini --noninteractive
          --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
        certbot_create_standalone_stop_services: []
        certbot_auto_renew_user: root

    - name: Copy certificate into influxdb SSL directory
      ansible.builtin.copy:
        remote_src: true
        src: /etc/letsencrypt/live/influxdb.home.inherently.xyz/fullchain.pem
        dest: /etc/ssl/influxdb.home.inherently.xyz.crt
        mode: "0644"
        owner: root
        group: root

    - name: Copy private key into influxdb SSL directory
      ansible.builtin.copy:
        remote_src: true
        src: /etc/letsencrypt/live/influxdb.home.inherently.xyz/privkey.pem
        dest: /etc/ssl/influxdb.home.inherently.xyz.key
        mode: "0644"
        owner: root
        group: root

    - name: Ensure tls-cert config option is set
      ansible.builtin.lineinfile:
        state: present
        create: true
        path: /etc/influxdb/config.toml
        line: tls-cert = "/etc/ssl/influxdb.home.inherently.xyz.crt"
        mode: "0644"
        owner: root
        group: root
      register: influx_tlscert

    - name: Ensure tls-key config option is set
      ansible.builtin.lineinfile:
        state: present
        create: true
        path: /etc/influxdb/config.toml
        line: tls-key = "/etc/ssl/influxdb.home.inherently.xyz.key"
        mode: "0644"
        owner: root
        group: root
      register: influx_tlskey

    - name: Ensure InfluxDB was restarted after config change
      ansible.builtin.systemd:
        name: influxdb
        state: restarted
      register: influx_restart
      when: influx_tlscert.changed or influx_tlskey.changed

    - name: Wait for InfluxDB to be up after restart
      ansible.builtin.wait_for:
        port: 8086
        delay: 5
        timeout: 60
      when: influx_restart.changed
