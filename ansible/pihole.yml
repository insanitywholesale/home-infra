---
- name: Configure pihole
  hosts: pihole
  become: true

  tasks:
    - name: Create a directory for the install script
      ansible.builtin.file:
        path: /opt/pihole-install
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Download PiHole install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/pi-hole/pi-hole/d15beff4ba2d7b65724b07be91ff8f18924a55a6/automated%20install/basic-install.sh
        dest: /opt/pihole-install/basic-install.sh
        checksum: sha512:fdfd61c46a1f0f89f03bd8de5297f32f1e129b6dc3179d365fa20c671fe131c2af01ef0b6a6e3eb078601936f749bf186dfda50e7a44a1d242305ca60747e26d
        mode: "0755"
        owner: root
        group: root
      register: pihole_script_new

    - name: Create a directory for pihole
      ansible.builtin.file:
        path: /etc/pihole
        state: directory
        mode: "0775"

    - name: Copy over setupVars.conf
      ansible.builtin.copy:
        src: setupVars.conf
        dest: /etc/pihole/setupVars.conf
        mode: "0644"
        owner: root
        group: root

    - name: Run pihole install script
      ansible.builtin.command:
        chdir: /opt/pihole-install/
        cmd: sudo ./basic-install.sh --unattended
      register: pihole_install_output
      changed_when: "'pihole' in pihole_install_output.stdout"
      when: pihole_script_new.changed

    - name: Copy dnsmasq edns-related config
      ansible.builtin.copy:
        src: 99-edns.conf
        dest: /etc/dnsmasq.d/99-edns.conf
        mode: "0644"
        owner: root
        group: root

    - name: Restart pihole service
      ansible.builtin.service:
        name: pihole-FTL
        enabled: true
        state: restarted
      when: pihole_install_output.changed

    - name: Add redirect from webroot to admin
      ansible.builtin.lineinfile:
        path: /etc/lighttpd/lighttpd.conf
        line: url.redirect = ("^/$" => "/admin" )
        insertafter: EOF
      register: lighttpd_redirect

    - name: Restart lighttpd service
      ansible.builtin.service:
        name: lighttpd
        enabled: true
        state: restarted
      when: lighttpd_redirect.changed

    - name: Install unbound
      ansible.builtin.apt:
        name: unbound
        update_cache: true
        state: present
      register: unbound_new

    - name: Stop unbound service
      ansible.builtin.service:
        name: unbound
        enabled: true
        state: stopped
      register: unbound_stopped
      when: unbound_new.changed

    - name: Copy pihole-compatible unbound config
      ansible.builtin.copy:
        src: unbound-pi-hole.conf
        dest: /etc/unbound/unbound.conf.d/unbound-pi-hole.conf
        mode: "0644"
        owner: root
        group: root
      register: unbound_config

    - name: Download root hints
      ansible.builtin.get_url:
        url: https://www.internic.net/domain/named.root
        dest: /var/lib/unbound/root.hints
        checksum: sha512:bb7f5f495e1bac867eb6b5d5934da3c195e6b7d210776673bc6a04d2fe72384a81883f5a19051571879ec712586d6b952fb7915a73fd23ee222ab7287e5e0055
        mode: "0644"
        owner: root
        group: root
      register: unbound_root_hints

    # NOTE: in case it fails check logs using sudo journalctl -u unbound.service -b
    - name: Start unbound service
      ansible.builtin.systemd_service:
        name: unbound
        enabled: true
        daemon_reload: true
        state: started
      when: unbound_config.changed or unbound_root_hints.changed or unbound_stopped.changed

    - name: Install CloudFlare certbot plugin
      ansible.builtin.apt:
        name: python3-certbot-dns-cloudflare
        update_cache: true
        state: present

    - name: Create cloudflare credentials file
      ansible.builtin.template:
        src: cloudflare.ini.j2
        dest: /etc/ssl/cloudflare.ini
        mode: "0600"
        owner: root
        group: root

    - name: Get LetsEncrypt TLS certificates
      ansible.builtin.import_role:
        name: geerlingguy.certbot
      vars:
        certbot_install_method: package
        certbot_create_if_missing: true
        certbot_create_method: standalone
        certbot_admin_email: pepitsizous@zoho.com
        certbot_certs:
          - domains:
              - pihole.home.inherently.xyz
        certbot_create_command: "{{ certbot_script }} certonly --preferred-challenges dns --dns-cloudflare --dns-cloudflare-credentials /etc/ssl/cloudflare.ini --noninteractive
          --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
        certbot_create_standalone_stop_services: []
        certbot_auto_renew_user: root
