---
- name: Enable overcommit in sysctl
  ansible.posix.sysctl:
    name: vm.overcommit_memory
    value: "1"
    state: present
    reload: true
    ignoreerrors: true
  when: redis_travis_ci is not defined

- name: Compile redis
  ansible.builtin.shell: umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool
    else '' }}
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: /usr/local/src/redis-{{ redis_version }}/src/redis-server

- name: Create redis install directory
  ansible.builtin.file:
    path: "{{ redis_install_dir }}"
    state: directory
    mode: "0755"

- name: Check if redis user exists (ignore errors)
  ansible.builtin.command: id {{ redis_user }}
  ignore_errors: true
  changed_when: false
  register: user_exists

- name: Add redis group
  ansible.builtin.group:
    name: "{{ redis_group }}"
    state: present
  when: user_exists is failed

- name: Add redis user
  ansible.builtin.user:
    name: "{{ redis_user }}"
    group: "{{ redis_group }}"
    comment: Redis
    home: "{{ redis_install_dir }}"
    shell: /bin/false
    system: true
  when: user_exists is failed

- name: Create /etc/redis
  ansible.builtin.file:
    path: /etc/redis
    state: directory
    mode: "0755"
    owner: "{{ redis_user }}"

- name: Create /var/run/redis
  ansible.builtin.file:
    path: /var/run/redis
    state: directory
    owner: "{{ redis_user }}"

- name: Install redis
  ansible.builtin.shell: umask 0022 && make PREFIX={{ redis_install_dir }} install
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    creates: "{{ redis_install_dir }}/bin/redis-server"

- name: List redis binaries to add to alternatives
  ansible.builtin.command: ls -1 {{ redis_install_dir }}/bin
  register: redis_binaries
  changed_when: false
  check_mode: false

- name: Add redis binaries to alternatives
  community.general.alternatives:
    name: "{{ item }}"
    path: "{{ redis_install_dir }}/bin/{{ item }}"
    link: /usr/bin/{{ item }}
  with_items: "{{ redis_binaries.stdout_lines }}"
  when: redis_binaries is succeeded
